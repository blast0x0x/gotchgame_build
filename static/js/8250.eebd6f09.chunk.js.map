{"version":3,"file":"static/js/8250.eebd6f09.chunk.js","mappings":"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","sources":["components/ConnectWalletButton.jsx","layouts/Header.jsx","layouts/index.jsx","components/RoundButton.jsx","components/CapsuleCards.jsx","pages/CardsPage.jsx"],"sourcesContent":["import './ConnectWalletButton.scss'\r\nimport RoundButton from './RoundButton'\r\n\r\nexport default function ConnectWalletButton(props) {\r\n  const {onClick} = props;\r\n  return (\r\n    <RoundButton className='connect-btn' onClick={onClick}>Connect wallet</RoundButton>\r\n  )\r\n}","import { Container, Nav, Navbar, Image } from 'react-bootstrap'\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\nimport Logo from 'assets/images/logoNew.png'\nimport './Header.scss'\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport RoundButton from 'components/RoundButton';\nimport { ConnectButton } from \"@rainbow-me/rainbowkit\";\n\nexport default function Header() {\n  const navigate = useNavigate();\n  const { pathname, hash } = useLocation();\n  if (hash === '#about') {\n    window.location.href = '#about'\n  }\n  return (\n    <Navbar expand={false} data-bs-theme=\"dark\" variant=\"dark\" sticky=\"top\" className=\"modern-header transparent-header\">\n      <Container fluid>\n        <div className=\"header-content w-100\">\n          <div className=\"nav-left-spacer\"></div>\n          <Navbar.Brand href='#' onClick={() => navigate('/')} className='logo-container centered-logo'>\n            <Image src={Logo} height='105px' width='120px' className=\"logo-image\" />\n          </Navbar.Brand>\n          <div className=\"wallet-connect-container\">\n            <ConnectButton.Custom>\n              {({\n                account,\n                chain,\n                openAccountModal,\n                openChainModal,\n                openConnectModal,\n                authenticationStatus,\n                mounted,\n              }) => {\n                // Note: If your app doesn't use authentication, you\n                // can remove all 'authenticationStatus' checks\n                const ready = mounted && authenticationStatus !== 'loading';\n                const connected =\n                  ready &&\n                  account &&\n                  chain &&\n                  (!authenticationStatus ||\n                    authenticationStatus === 'authenticated');\n\n                return (\n                  <div\n                    {...(!ready && {\n                      'aria-hidden': true,\n                      'style': {\n                        opacity: 0,\n                        pointerEvents: 'none',\n                        userSelect: 'none',\n                      },\n                    })}\n                    className='button-group'\n                  >\n                    {(() => {\n                      if (!connected) {\n                        return (\n                          <ConnectWalletButton onClick={openConnectModal} type=\"button\" className=\"connect-btn glow-effect\">\n                            <span className=\"btn-icon\">💼</span>\n                            <span className=\"btn-text\">Connect Wallet</span>\n                          </ConnectWalletButton>\n                        );\n                      }\n\n                      if (chain.unsupported) {\n                        return (\n                          <RoundButton onClick={openChainModal} type=\"button\" variant='warning' className=\"network-btn warning-btn\">\n                            <span className=\"btn-icon\">⚠️</span>\n                            <span className=\"btn-text\">Wrong network</span>\n                          </RoundButton>\n                        );\n                      }\n\n                      return (\n                        <div className='d-flex gap-3 isConnected wallet-connected'>\n                          <RoundButton\n                            onClick={openChainModal}\n                            type=\"button\"\n                            className='d-flex align-items-center chain-btn'\n                            variant='primary'\n                          >\n                            {chain.hasIcon && (\n                              <div\n                                className=\"chain-icon\"\n                                style={{\n                                  background: chain.iconBackground,\n                                  width: 18,\n                                  height: 18,\n                                  borderRadius: 999,\n                                  overflow: 'hidden',\n                                  marginRight: 8,\n                                  boxShadow: '0 0 10px rgba(54, 202, 186, 0.5)',\n                                }}\n                              >\n                                {chain.iconUrl && (\n                                  <img\n                                    alt={chain.name ?? 'Chain icon'}\n                                    src={chain.iconUrl}\n                                    style={{ width: 18, height: 18 }}\n                                  />\n                                )}\n                              </div>\n                            )}\n                            <span className=\"chain-name\">{chain.name}</span>\n                          </RoundButton>\n\n                          <RoundButton onClick={openAccountModal} type=\"button\" variant='success' className=\"account-btn\">\n                            <span className=\"account-icon\">👤</span>\n                            <span className=\"account-text\">\n                              {account.displayName}\n                              {account.displayBalance\n                                ? <span className=\"balance-text\"> ({account.displayBalance})</span>\n                                : ''}\n                            </span>\n                          </RoundButton>\n                        </div>\n                      );\n                    })()}\n                  </div>\n                );\n              }}\n            </ConnectButton.Custom>\n          </div>\n        </div>\n      </Container>\n    </Navbar>\n  )\n}\n","import Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport './index.scss'\r\n\r\nexport default function Layout({children}) {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        {children}\r\n      </main>\r\n     \r\n    </>\r\n  )\r\n}","import './RoundButton.scss';\r\n\r\nexport default function RoundButton({children, className, onClick, variant, disabled }) {\r\n  return (\r\n    <button className={`round-button ${className ?? ''} ${variant ?? ''}`} onClick={onClick} disabled={disabled}>{children}</button>\r\n  )\r\n}","import { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CapsuleCards.scss';\n\n// Import card images\nimport legacyairdropImage from '../assets/cardsinsideimage/legacyairdrop.jpeg';\nimport upornahImage from '../assets/cardsinsideimage/upornah.jpeg';\nimport burnImage from '../assets/cardsinsideimage/burn.jpeg';\nimport presaleImage from '../assets/cardsinsideimage/presale.jpeg';\nimport missionImage from '../assets/cardsinsideimage/missions.jpeg';\nimport pvpcardImage from '../assets/cardsinsideimage/pvpcard.jpeg';\n\nconst CapsuleCards = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [swipeDirection, setSwipeDirection] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const containerRef = useRef(null);\n  const navigate = useNavigate();\n  \n  // Handle window resize and update isMobile state\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  // Reset state when component mounts to ensure clean state after navigation\n  useEffect(() => {\n    setActiveIndex(0);\n    setSwipeDirection(null);\n    setIsAnimating(false);\n  }, []);\n  \n  // Card data\n  const cards = [\n    {\n      id: 1,\n      title: \"Up Or Nah\",\n      color: \"#FF5722\",\n      image: upornahImage,\n      url: \"betting.gotchanft.com\",\n      status: \"available\"\n    },\n    {\n      id: 2,\n      title: \"Legacy Airdrop\",\n      color: \"#2196F3\",\n      image: legacyairdropImage,\n      url: \"airdrop.gotchanft.com\",\n      status: \"available\"\n    },\n    {\n      id: 3,\n      title: \"Burn\",\n      color: \"#E91E63\",\n      image: burnImage,\n      url: \"burn.gotchanft.com\",\n      status: \"available\"\n    },\n    {\n      id: 4,\n      title: \"Presale\",\n      color: \"#9C27B0\",\n      image: presaleImage,\n      path: \"/\",\n      status: \"coming-soon\"\n    },\n    {\n      id: 5,\n      title: \"Gotcha Missions\",\n      color: \"#4CAF50\",\n      image: missionImage,\n      path: \"/mint\",\n      status: \"available\"\n    },\n    {\n      id: 6,\n      title: \"PvP Card Game\",\n      color: \"#FFC107\",\n      image: pvpcardImage,\n      path: \"/\",\n      status: \"coming-soon\"\n    }\n  ];\n\n  // Handle next card\n  const nextCard = () => {\n    if (isAnimating) return;\n    setIsAnimating(true);\n    setSwipeDirection('left');\n    \n    setTimeout(() => {\n      setActiveIndex((prevIndex) => (prevIndex + 1) % cards.length);\n      setSwipeDirection(null);\n      setIsAnimating(false);\n    }, 300);\n  };\n\n  // Handle previous card\n  const prevCard = () => {\n    if (isAnimating) return;\n    setIsAnimating(true);\n    setSwipeDirection('right');\n    \n    setTimeout(() => {\n      setActiveIndex((prevIndex) => (prevIndex - 1 + cards.length) % cards.length);\n      setSwipeDirection(null);\n      setIsAnimating(false);\n    }, 300);\n  };\n\n  // Handle dot navigation\n  const goToCard = (index) => {\n    if (isAnimating || index === activeIndex) return;\n    setIsAnimating(true);\n    setSwipeDirection(index > activeIndex ? 'left' : 'right');\n    \n    setTimeout(() => {\n      setActiveIndex(index);\n      setSwipeDirection(null);\n      setIsAnimating(false);\n    }, 300);\n  };\n  \n  // Handle card click for navigation\n  const handleCardClick = (card) => {\n    // Don't allow navigation for unavailable cards\n    if (card.status === 'coming-soon' || card.status === 'coming-soon') {\n      return;\n    }\n    \n    if (isMobile) {\n      // On mobile, first click selects the card, second click navigates\n      if (card.id - 1 === activeIndex) {\n        if (card.url) {\n          // External URL - open in new tab\n          window.open(`https://${card.url}`, '_blank');\n        } else if (card.path) {\n          // Internal path - navigate\n          navigate(card.path);\n        }\n      } else {\n        goToCard(card.id - 1);\n      }\n    } else {\n      // On desktop, directly navigate\n      if (card.url) {\n        // External URL - open in new tab\n        window.open(`https://${card.url}`, '_blank');\n      } else if (card.path) {\n        // Internal path - navigate\n        navigate(card.path);\n      }\n    }\n  };\n\n  // Card position function for mobile view - vertical stacking instead of horizontal\n  const getCardStyle = (index) => {\n    if (!isMobile) return {};\n    \n    // Calculate position relative to active card\n    const position = index - activeIndex;\n    \n    // Apply different styles based on position - vertical stacking\n    if (position === 0) {\n      // Active card - centered\n      return {\n        transform: `translateY(0) scale(1)`,\n        opacity: 1,\n        zIndex: 10\n      };\n    } else if (position === 1) {\n      // Next card - below and smaller\n      return {\n        transform: `translateY(20px) scale(0.9)`,\n        opacity: 0,\n        zIndex: 9\n      };\n    } else if (position === -1) {\n      // Previous card - above and smaller\n      return {\n        transform: `translateY(-20px) scale(0.9)`,\n        opacity: 0,\n        zIndex: 9\n      };\n    } else {\n      // All other cards - hidden\n      return {\n        transform: `scale(0.8)`,\n        opacity: 0,\n        zIndex: 8\n      };\n    }\n  };\n  \n  // No touch events - using improved button navigation only\n\n  // Handle keyboard navigation\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'ArrowLeft') {\n        prevCard();\n      } else if (e.key === 'ArrowRight') {\n        nextCard();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [activeIndex, isAnimating]);\n\n  // The getCardStyle function has been moved to the top of the component\n\n  return (\n    <div className=\"capsule-cards-container\" ref={containerRef}>\n      {/* Navigation buttons only shown on mobile */}\n      {isMobile && (\n        <>\n          <button className=\"nav-arrow prev\" onClick={prevCard} aria-label=\"Previous card\">\n            <span>‹</span>\n          </button>\n          <button className=\"nav-arrow next\" onClick={nextCard} aria-label=\"Next card\">\n            <span>›</span>\n          </button>\n        </>\n      )}\n      \n      {/* Cards container */}\n      <div className={`cards-slider ${isMobile ? 'mobile' : 'desktop'} ${swipeDirection ? `swiping-${swipeDirection}` : ''}`}>\n        {cards.map((card, index) => (\n          <div \n            key={card.id}\n            className={`capsule-card ${index === activeIndex ? 'active' : ''} ${card.status === 'coming-soon' || card.status === 'coming-soon' ? 'unavailable' : ''}`}\n            style={{\n              '--card-color': card.color,\n              ...(isMobile ? getCardStyle(index) : {})\n            }}\n            onClick={() => handleCardClick(card)}\n          >\n            <div className=\"card-image\" style={{ backgroundImage: `url(${card.image})` }}>\n              <div className=\"card-overlay\"></div>\n              {(card.status === 'closed' || card.status === 'coming-soon') && (\n                <div className=\"card-status-overlay\">\n                  <div className=\"status-badge\">\n                    {card.status === 'closed' ? 'COMING SOON' : 'COMING SOON'}\n                  </div>\n                </div>\n              )}\n              <h3 className=\"card-title\">{card.title}</h3>\n            </div>\n          </div>\n        ))}\n      </div>\n      \n      {/* Dot indicators for mobile */}\n      {isMobile && (\n        <div className=\"carousel-dots\">\n          {cards.map((_, index) => (\n            <span \n              key={index} \n              className={`dot ${index === activeIndex ? 'active' : ''}`}\n              onClick={() => goToCard(index)}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CapsuleCards;\n","import React from 'react';\nimport Layout from 'layouts';\nimport { Container } from 'react-bootstrap';\nimport CapsuleCards from '../components/CapsuleCards';\nimport './CardsPage.scss';\n\nconst CardsPage = () => {\n  return (\n    <Layout>\n      <Container fluid>\n        <div className=\"cards-page-container\">\n          <div className=\"cards-page-header\">\n            <h1 className=\"page-title\" data-text=\"GOTCHA\">GOTCHA <span>UNIVERSE</span></h1>\n            <p className=\"page-subtitle\">Explore our gaming ecosystem with immersive experiences</p>\n          </div>\n          \n          <div className=\"capsule-cards-section\">\n            <CapsuleCards />\n          </div>\n        </div>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default CardsPage;\n"],"names":["ConnectWalletButton","props","onClick","_jsx","RoundButton","className","children","Header","navigate","useNavigate","pathname","hash","useLocation","window","location","href","Navbar","expand","variant","sticky","Container","fluid","_jsxs","Brand","Image","src","Logo","height","width","ConnectButton","Custom","_ref","account","chain","openAccountModal","openChainModal","openConnectModal","authenticationStatus","mounted","ready","connected","opacity","pointerEvents","userSelect","unsupported","type","hasIcon","style","background","iconBackground","borderRadius","overflow","marginRight","boxShadow","iconUrl","alt","_chain$name","name","displayName","displayBalance","Layout","_Fragment","disabled","CapsuleCards","activeIndex","setActiveIndex","useState","swipeDirection","setSwipeDirection","isAnimating","setIsAnimating","isMobile","setIsMobile","innerWidth","containerRef","useRef","useEffect","handleResize","addEventListener","removeEventListener","cards","id","title","color","image","upornahImage","url","status","legacyairdropImage","burnImage","presaleImage","path","missionImage","pvpcardImage","nextCard","setTimeout","prevIndex","length","prevCard","goToCard","index","getCardStyle","position","transform","zIndex","handleKeyDown","e","key","ref","map","card","open","handleCardClick","backgroundImage","_","CardsPage"],"sourceRoot":""}