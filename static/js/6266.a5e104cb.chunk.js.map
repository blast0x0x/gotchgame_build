{"version":3,"file":"static/js/6266.a5e104cb.chunk.js","mappings":"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AIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GAAIC,QAAS,IAAKC,MAAO,MAAOC,IAAK,OAC9C,CAAEH,MAAO,GA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","sources":["pages/Mission.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useAccount, useChainId, useReadContract, useWriteContract } from 'wagmi';\n\nimport { ethers } from \"ethers\";\nimport axios from 'axios';\nimport toast from \"react-hot-toast\";\n\nimport Layout from 'layouts'\nimport './Mission.scss'\n\n// Import mission images\nimport mission0Img from '../assets/mission/mission0.jpeg';\nimport mission5Img from '../assets/mission/mission5.jpeg';\nimport mission10Img from '../assets/mission/mission10.jpeg';\nimport mission20Img from '../assets/mission/mission20.jpeg';\nimport mission50Img from '../assets/mission/mission50.jpeg';\nimport bannerImg from '../assets/mission/banner.jpeg';\nimport {\n    TEST_NET,\n    NEW_GOTCHA_ADDRESS_TEST,\n    NEW_GOTCHA_ADDRESS_MAIN,\n    GG_ADDRESS_TEST,\n    GG_ADDRESS_MAIN,\n    MISSION_ADDRESS_TEST,\n    MISSION_ADDRESS_MAIN,\n    API_URL_TEST,\n    API_URL_MAIN\n} from \"../config\";\nimport NewGotchaAbi from \"../config/abis/NEW_GOTCHA_ABI.json\";\nimport GGAbi from \"../config/abis/GG_ABI.json\";\nimport MissionAbi from \"../config/abis/MISSION_ABI.json\";\nimport { RefreshContext } from '../context/RefreshContext'\n\nconst UINT256_MAX = \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n\n// Component to fetch claimable amount directly from the blockchain\n\n\nconst level_types = [\n    { level: 1, require: 200, start: 0, end: 199 },\n    { level: 2, require: 205, start: 200, end: 404 },\n    { level: 3, require: 210, start: 405, end: 614 },\n    { level: 4, require: 215, start: 615, end: 829 },\n    { level: 5, require: 220, start: 830, end: 1049 },\n    { level: 6, require: 225, start: 1050, end: 1274 },\n    { level: 7, require: 230, start: 1275, end: 1504 },\n    { level: 8, require: 235, start: 1505, end: 1739 },\n    { level: 9, require: 240, start: 1740, end: 1979 },\n    { level: 10, require: 245, start: 1980, end: 2224 },\n    { level: 11, require: 250, start: 2225, end: 2474 },\n    { level: 12, require: 255, start: 2475, end: 2729 },\n    { level: 13, require: 260, start: 2730, end: 2989 },\n    { level: 14, require: 265, start: 2990, end: 3254 },\n    { level: 15, require: 270, start: 3255, end: 3524 },\n    { level: 16, require: 275, start: 3525, end: 3799 },\n    { level: 17, require: 280, start: 3800, end: 4079 },\n    { level: 18, require: 285, start: 4080, end: 4364 },\n    { level: 19, require: 290, start: 4365, end: 4654 },\n    { level: 20, require: 295, start: 4655, end: 4949 },\n    { level: 21, require: 300, start: 4950, end: 5249 },\n    { level: 22, require: 305, start: 5250, end: 5554 },\n    { level: 23, require: 310, start: 5555, end: 5864 },\n    { level: 24, require: 315, start: 5865, end: 6179 },\n    { level: 25, require: 320, start: 6180, end: 6499 },\n    { level: 26, require: 325, start: 6500, end: 6824 },\n    { level: 27, require: 330, start: 6825, end: 7154 },\n    { level: 28, require: 335, start: 7155, end: 7489 },\n    { level: 29, require: 340, start: 7490, end: 7829 },\n    { level: 30, require: 345, start: 7830, end: 8174 },\n    { level: 31, require: 350, start: 8175, end: 8524 },\n    { level: 32, require: 355, start: 8525, end: 8879 },\n    { level: 33, require: 360, start: 8880, end: 9239 },\n    { level: 34, require: 365, start: 9240, end: 9604 },\n    { level: 35, require: 370, start: 9605, end: 9974 },\n    { level: 36, require: 375, start: 9975, end: 10349 },\n    { level: 37, require: 380, start: 10350, end: 10729 },\n    { level: 38, require: 385, start: 10730, end: 11114 },\n    { level: 39, require: 390, start: 11115, end: 11504 },\n    { level: 40, require: 395, start: 11505, end: 11899 },\n    { level: 41, require: 400, start: 11900, end: 12299 },\n    { level: 42, require: 405, start: 12300, end: 12704 },\n    { level: 43, require: 410, start: 12705, end: 13114 },\n    { level: 44, require: 415, start: 13115, end: 13529 },\n    { level: 45, require: 420, start: 13530, end: 13949 },\n    { level: 46, require: 425, start: 13950, end: 14374 },\n    { level: 47, require: 430, start: 14375, end: 14804 },\n    { level: 48, require: 435, start: 14805, end: 15239 },\n    { level: 49, require: 440, start: 15240, end: 15679 },\n    { level: 50, require: 445, start: 15680, end: 16124 },\n    { level: 51, require: 450, start: 16125, end: 16574 },\n    { level: 52, require: 455, start: 16575, end: 17029 },\n    { level: 53, require: 460, start: 17030, end: 17489 },\n    { level: 54, require: 465, start: 17490, end: 17954 },\n    { level: 55, require: 470, start: 17955, end: 18424 },\n    { level: 56, require: 475, start: 18425, end: 18899 },\n    { level: 57, require: 480, start: 18900, end: 19379 },\n    { level: 58, require: 485, start: 19380, end: 19864 },\n    { level: 59, require: 490, start: 19865, end: 20354 },\n    { level: 60, require: 495, start: 20355, end: 20849 },\n    { level: 61, require: 500, start: 20850, end: 21349 },\n    { level: 62, require: 505, start: 21350, end: 21854 },\n    { level: 63, require: 510, start: 21855, end: 22364 },\n    { level: 64, require: 515, start: 22365, end: 22879 },\n    { level: 65, require: 520, start: 22880, end: 23399 },\n    { level: 66, require: 525, start: 23400, end: 23924 },\n    { level: 67, require: 530, start: 23925, end: 24454 },\n    { level: 68, require: 535, start: 24455, end: 24989 },\n    { level: 69, require: 540, start: 24990, end: 25529 },\n    { level: 70, require: 545, start: 25530, end: 26074 },\n    { level: 71, require: 550, start: 26075, end: 26624 },\n    { level: 72, require: 555, start: 26625, end: 27179 },\n    { level: 73, require: 560, start: 27180, end: 27739 },\n    { level: 74, require: 565, start: 27740, end: 28304 },\n    { level: 75, require: 570, start: 28305, end: 28874 },\n    { level: 76, require: 575, start: 28875, end: 29449 },\n    { level: 77, require: 580, start: 29450, end: 30029 },\n    { level: 78, require: 585, start: 30030, end: 30614 },\n    { level: 79, require: 590, start: 30615, end: 31204 },\n    { level: 80, require: 595, start: 31205, end: 31799 },\n    { level: 81, require: 600, start: 31800, end: 32399 }\n]\n\nconst ary = Array.from({ length: 10000 }, (_, i) => ({\n    isApprovingFeeding: false,\n\n    isApprovingNFT: false,\n    isApprovingMission: false,\n\n    isBetting: false,\n\n    isFeeding: false,\n\n    isSendingToMission: false,\n    isReturningToWallet: false\n}));\n\nexport const useRefresh = () => {\n    const { fast, slow } = useContext(RefreshContext)\n    return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default function MintPage() {\n    const { fastRefresh } = useRefresh();\n\n    const chainId = useChainId();\n    const { address } = useAccount();\n    const { writeContractAsync } = useWriteContract();\n    const [tokenIds, setTokenIds] = useState([]);\n\n    ///////////////////////////////////////////////\n    const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\n        address: chainId === TEST_NET ? GG_ADDRESS_TEST : GG_ADDRESS_MAIN,\n        abi: GGAbi,\n        functionName: \"balanceOf\",\n        args: [address],\n        chainId: chainId,\n        enabled: !!address && !!chainId,\n    });\n\n    const { data: approvedAmount, refetch: refetchApprovedAmount } = useReadContract({\n        address: chainId === TEST_NET ? GG_ADDRESS_TEST : GG_ADDRESS_MAIN,\n        abi: GGAbi,\n        functionName: \"allowance\",\n        args: [address, chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN],\n        chainId: chainId,\n        enabled: !!address && !!chainId,\n    });\n\n    ///////////////////////////////////////////////\n    const { data: isApprovedForAll, refetch: refetchIsApprovedForAll } = useReadContract({\n        address: chainId === TEST_NET ? NEW_GOTCHA_ADDRESS_TEST : NEW_GOTCHA_ADDRESS_MAIN,\n        abi: NewGotchaAbi,\n        functionName: \"isApprovedForAll\",\n        args: [address, chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN],\n        chainId: chainId,\n        enabled: !!address && !!chainId,\n    });\n\n    ///////////////////////////////////////////////\n    const { data: missionPrice, refetch: refetchMissionPrice } = useReadContract({\n        address: chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN,\n        abi: MissionAbi,\n        functionName: \"missionPrice\",\n        args: [],\n        chainId: chainId,\n        enabled: !!address && !!chainId,\n    });\n\n    const { data: feedingPrice, refetch: refetchFeedingPrice } = useReadContract({\n        address: chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN,\n        abi: MissionAbi,\n        functionName: \"feedingPrice\",\n        args: [],\n        chainId: chainId,\n        enabled: !!address && !!chainId,\n    });\n\n    const { data: missionItemInfos, refetch: refetchMissionItemInfos } = useReadContract({\n        address: chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN,\n        abi: MissionAbi,\n        functionName: \"getItemInfos\",\n        args: [tokenIds],\n        chainId: chainId,\n        enabled: !!address && !!chainId,\n    });\n\n    const { data: nftsForUserData, refetch: refetchNFTsForUserData } = useReadContract({\n        address: chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN,\n        abi: MissionAbi,\n        functionName: \"getTokensForUser\",\n        args: [address],\n        chainId: chainId,\n        enabled: !!address && !!chainId,\n    });\n\n    const [nftsOnWallet, setNftsOnWallet] = useState([]);\n    const [metadatas, setMetadatas] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [showFeedAnimation, setShowFeedAnimation] = useState(false);\n    const [needApproveGG, setNeedApproveGG] = useState(false);\n    const [showRewardPopup, setShowRewardPopup] = useState(false);\n    const [rewardAmount, setRewardAmount] = useState(0);\n    const [isRewardLoading, setIsRewardLoading] = useState(false);\n    const [isClaiming, setIsClaiming] = useState(false);\n\n\n    const [btnStatus, setBtnStatus] = useState(ary);\n\n    useEffect(() => {\n        refetchTokenBalance();\n        refetchApprovedAmount();\n\n        refetchIsApprovedForAll();\n\n        refetchNFTsForUserData();\n\n        refetchMissionItemInfos();\n    }, [fastRefresh])\n\n    useEffect(() => {\n        if (nftsForUserData) {\n            const sortedData = nftsForUserData.sort((a, b) => Number(a.token_id) - Number(b.token_id))\n            setNftsOnWallet(sortedData);\n        }\n    }, [nftsForUserData])\n\n    useEffect(() => {\n        if (nftsOnWallet?.length > 0) {\n            // Get metadata from API for each NFT\n            const tokenids = nftsOnWallet.map((item) => {\n                return Number(item.token_id);\n            });\n            setTokenIds(tokenids);\n            getMetadatas(tokenids);\n        } else if (address && chainId) {\n            // If we have address and chainId but no data after 5 seconds, stop loading\n            const timer = setTimeout(() => {\n                if (loading) {\n                    setLoading(false);\n                    setTokenIds([]);\n                    setMetadatas([]);\n                }\n            }, 5000);\n\n            return () => clearTimeout(timer);\n        }\n    }, [nftsOnWallet, address, chainId, loading]);\n\n    useEffect(() => {\n        if (approvedAmount == null || missionPrice == null) return;\n\n        if (Number(ethers.formatEther(approvedAmount)) < Number(ethers.formatEther(missionPrice))) {\n            setNeedApproveGG(true);\n        } else {\n            setNeedApproveGG(false);\n        }\n    }, [approvedAmount, missionPrice]);\n\n    // Track the last NFT used in mission\n    const [lastMissionNftId, setLastMissionNftId] = useState(null);\n\n    // Effect to check claimable amount when reward popup is shown\n    useEffect(() => {\n        if (showRewardPopup && lastMissionNftId !== null) {\n            console.log(\"🎯 Setting up reward popup for NFT:\", lastMissionNftId);\n\n            // Start with loading state\n            setIsRewardLoading(true);\n            setRewardAmount(0);\n\n            // Wait 5 seconds then check for claimable amount\n            const timer = setTimeout(async () => {\n                try {\n                    console.log(\"🔍 Timer triggered for NFT:\", lastMissionNftId);\n\n                    // Refetch mission item info to get the latest data\n                    const refetchResult = await refetchMissionItemInfos();\n                    console.log(\"🔍 Refetch result:\", refetchResult);\n\n                    // Use the fresh data from the refetch result, not the stale state\n                    const freshMissionItemInfos = refetchResult?.data || missionItemInfos;\n                    console.log(\"🔍 Fresh mission item infos:\", freshMissionItemInfos);\n                    console.log(\"🔍 Token IDs:\", tokenIds);\n\n                    // Find the specific NFT that was used in the mission\n                    if (freshMissionItemInfos && tokenIds.length > 0) {\n                        const tokenIndex = tokenIds.indexOf(Number(lastMissionNftId));\n                        console.log(\"🔍 Token index found:\", tokenIndex);\n\n                        if (tokenIndex >= 0 && freshMissionItemInfos[tokenIndex]) {\n                            console.log(\"🔍 Mission item info at index:\", freshMissionItemInfos[tokenIndex]);\n                            const claimableAmount = Number(ethers.formatEther(freshMissionItemInfos[tokenIndex].claimableAmount));\n                            console.log(\"🔍 Claimable amount:\", claimableAmount);\n\n                            setRewardAmount(claimableAmount);\n                        } else {\n                            console.log(`❌ NFT #${lastMissionNftId} not found in mission item infos`);\n                        }\n                    } else {\n                        console.log(\"❌ No fresh mission item infos or token IDs\");\n                    }\n                } catch (error) {\n                    console.error(\"❌ Error checking claimable amount:\", error);\n                } finally {\n                    // Always turn off loading after 5 seconds\n                    console.log(\"✅ Turning off loading\");\n                    setIsRewardLoading(false);\n                }\n            }, 5000);\n\n            return () => clearTimeout(timer);\n        }\n    }, [showRewardPopup, lastMissionNftId]);\n\n    const getMetadatas = async (tokenids) => {\n        try {\n            const response = await axios.get(`${chainId === TEST_NET ? API_URL_TEST : API_URL_MAIN}/api/newgame/getMetadatas`, {\n                params: {\n                    tokenids: tokenids\n                }\n            });\n            if (response.data.success) {\n                setMetadatas(response.data.data);\n                setLoading(false);\n            }\n        }\n        catch (err) {\n            console.log(err);\n            setLoading(false);\n        }\n    };\n\n    const formatNextFeedTime = (countDown) => {\n        if (countDown <= 0) return \"Available\";\n\n        const hours = Math.floor(countDown / (3600 * 1000));\n        const minutes = Math.floor((countDown % (3600 * 1000)) / (60 * 1000));\n\n        if (hours > 0) {\n            return `${hours}h ${minutes}m`;\n        } else {\n            return `${minutes}m`;\n        }\n    };\n\n    const handleFeed = async (nft, index) => {\n        // Show feed animation\n        setShowFeedAnimation(true);\n\n        // Hide animation after 4.5 seconds\n        setTimeout(() => {\n            setShowFeedAnimation(false);\n        }, 4500);\n\n        if (nft) {\n            const buttonInner = document.querySelector('.ultra-feed-button-inner');\n            if (buttonInner) {\n                buttonInner.classList.add('ultra-feed-button-click-effect');\n                setTimeout(() => {\n                    buttonInner.classList.remove('ultra-feed-button-click-effect');\n                }, 500);\n            }\n\n            if (needApproveGG) {\n                let temp = btnStatus;\n                temp[index].isApprovingFeeding = true;\n                setBtnStatus(temp);\n\n                await writeContractAsync({\n                    address: chainId === TEST_NET ? GG_ADDRESS_TEST : GG_ADDRESS_MAIN,\n                    abi: GGAbi,\n                    functionName: \"approve\",\n                    args: [chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN, UINT256_MAX],\n                })\n                    .then(() => {\n                        temp[index].isApprovingFeeding = false;\n                        setBtnStatus(temp);\n                    })\n                    .finally(() => {\n                        temp[index].isApprovingFeeding = false;\n                        setBtnStatus(temp);\n                    })\n                    .catch((err) => {\n                        temp[index].isApprovingFeeding = false;\n                        setBtnStatus(temp);\n                        toast.error(\"Approval failed.\");\n                    });\n                return;\n            }\n\n            let isSubmitted = false;\n\n            let temp = btnStatus;\n            temp[index].isFeeding = true;\n            setBtnStatus(temp);\n            await writeContractAsync({\n                address: chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN,\n                abi: MissionAbi,\n                functionName: \"feed\",\n                args: [nft.tokenid],\n            })\n                .then(() => {\n                    temp[index].isFeeding = false;\n                    setBtnStatus(temp);\n                    isSubmitted = true;\n                })\n                .finally(() => {\n                    temp[index].isFeeding = false;\n                    setBtnStatus(temp);\n                })\n                .catch((err) => {\n                    console.log(\"handleFeed error = \", err);\n                    temp[index].isFeeding = false;\n                    setBtnStatus(temp);\n                    return;\n                });\n\n            if (isSubmitted) {\n                try {\n                    const response = await axios.post(`${chainId === TEST_NET ? API_URL_TEST : API_URL_MAIN}/api/newgame/updateLevel`, {\n                        nftId: nft.tokenid\n                    });\n                    if (response.data.success === true) {\n\n                    } else {\n                        toast.error(response.data.message);\n                    }\n                } catch (error) {\n                    console.log(error);\n                    toast.error(\"An error occurred while feeding.\");\n                }\n            }\n        } else {\n            toast.error(\"Please select a NFT to feed.\");\n        }\n    };\n\n    const handleApproveForAll = async (nft, index) => {\n        if (nft) {\n            if (!isApprovedForAll) {\n                let temp = btnStatus\n                temp[index].isApprovingNFT = true;\n                setBtnStatus(temp);\n                await writeContractAsync({\n                    address: chainId === TEST_NET ? NEW_GOTCHA_ADDRESS_TEST : NEW_GOTCHA_ADDRESS_MAIN,\n                    abi: NewGotchaAbi,\n                    functionName: \"setApprovalForAll\",\n                    args: [chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN, true],\n                })\n                    .then(() => {\n                        temp[index].isApprovingNFT = false;\n                        setBtnStatus(temp);\n                    })\n                    .finally(() => {\n                        temp[index].isApprovingNFT = false;\n                        setBtnStatus(temp);\n                    })\n                    .catch((err) => {\n                        temp[index].isApprovingNFT = false;\n                        setBtnStatus(temp);\n                        toast.error(\"Approval failed.\");\n                    });\n                return;\n            }\n        } else {\n            toast.error(\"Please select a NFT to approve.\");\n        }\n    }\n\n    const handleSendMission = async (nft, index) => {\n        if (nft) {\n            let temp = btnStatus;\n            temp[index].isSendingToMission = true;\n            setBtnStatus(temp);\n\n            await writeContractAsync({\n                address: chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN,\n                abi: MissionAbi,\n                functionName: \"sendToMission\",\n                args: [nft.tokenid],\n            })\n                .then(() => {\n                    temp[index].isSendingToMission = false;\n                    setBtnStatus(temp);\n                    // Removed popup trigger from here\n                    toast.success(\"Sent a NFT to Mission Successfully! Please start Mission!\");\n                })\n                .finally(() => {\n                    temp[index].isSendingToMission = false;\n                    setBtnStatus(temp);\n                })\n                .catch((err) => {\n                    temp[index].isSendingToMission = false;\n                    setBtnStatus(temp);\n                    console.error(\"Mission error:\", err);\n                });\n        } else {\n            toast.error(\"Please select a NFT to send to Mission.\");\n        }\n    }\n\n    const handleReturnWallet = async (nft, index) => {\n        if (nft) {\n            let temp = btnStatus;\n            temp[index].isReturningToWallet = true;\n            setBtnStatus(temp);\n            await writeContractAsync({\n                address: chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN,\n                abi: MissionAbi,\n                functionName: \"returnToWallet\",\n                args: [nft.tokenid],\n            })\n                .then(() => {\n                    temp[index].isReturningToWallet = false;\n                    setBtnStatus(temp);\n                    // Removed popup trigger from here\n                    toast.success(\"Returned a NFT to Your Wallet Successfully!\");\n                })\n                .finally(() => {\n                    temp[index].isReturningToWallet = false;\n                    setBtnStatus(temp);\n                })\n                .catch((err) => {\n                    temp[index].isReturningToWallet = false;\n                    setBtnStatus(temp);\n                    console.error(\"Mission error:\", err);\n                });\n        } else {\n            toast.error(\"Please select a NFT to return to Your Wallet.\");\n        }\n    }\n\n    const handleMission = async (nft, index) => {\n        if (nft) {\n            if (needApproveGG) {\n                let temp = btnStatus;\n                temp[index].isApprovingMission = true;\n                setBtnStatus(temp);\n\n                await writeContractAsync({\n                    address: chainId === TEST_NET ? GG_ADDRESS_TEST : GG_ADDRESS_MAIN,\n                    abi: GGAbi,\n                    functionName: \"approve\",\n                    args: [chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN, UINT256_MAX],\n                })\n                    .then(() => {\n                        temp[index].isApprovingMission = false;\n                        setBtnStatus(temp);\n                    })\n                    .finally(() => {\n                        temp[index].isApprovingMission = false;\n                        setBtnStatus(temp);\n                    })\n                    .catch((err) => {\n                        temp[index].isApprovingMission = false;\n                        setBtnStatus(temp);\n                        toast.error(\"Approval failed.\");\n                    });\n                return;\n            }\n\n            let temp = btnStatus;\n            temp[index].isBetting = true;\n            setBtnStatus(temp);\n            await writeContractAsync({\n                address: chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN,\n                abi: MissionAbi,\n                functionName: \"startMission\",\n                args: [nft.tokenid],\n            })\n                .then(() => {\n                    temp[index].isBetting = false;\n                    setBtnStatus(temp);\n                    // Removed popup trigger from here\n                    toast.success(\"Mission started! Wait for rewards to become claimable.\");\n                })\n                .finally(() => {\n                    temp[index].isBetting = false;\n                    setBtnStatus(temp);\n                })\n                .catch((err) => {\n                    temp[index].isBetting = false;\n                    setBtnStatus(temp);\n                    console.error(\"Mission error:\", err);\n                });\n        } else {\n            toast.error(\"Please select a NFT to start Mission.\");\n        }\n    }\n\n    const handleClaim = async (nft, index) => {\n        if (nft) {\n            // Set up for exciting 5-second reveal\n            setLastMissionNftId(nft.tokenid);\n            setShowRewardPopup(true);\n            setIsRewardLoading(true); // Start the excitement!\n            setRewardAmount(0); // Reset for suspense\n\n            // The existing useEffect will handle the 5-second delay and reward reveal\n            // After the popup closes or user clicks claim in popup, we'll actually claim\n\n        } else {\n            toast.error(\"Please select a NFT to claim.\");\n        }\n    }\n\n\n    return (\n        <Layout>\n            <div className=\"balance-container\">\n                <div className=\"balance-item\">\n                    GOTCHA Balance: <span className=\"balance-value\">{tokenIds.length}</span>\n                </div>\n                <div className=\"balance-item\">\n                    $GG Balance: <span className=\"balance-value\">{tokenBalance ? parseInt(ethers.formatEther(tokenBalance)) : 0}</span>\n                </div>\n            </div>\n\n            <div className=\"weekly-mission-container\">\n                <div className=\"mission-banner-wrapper\">\n                    <div className=\"mission-banner-image\">\n                        <img src={bannerImg} alt=\"Weekly Mission\" />\n                        <div className=\"mission-overlay\"></div>\n                        <div className=\"mission-badge\">WEEKLY MISSION</div>\n                    </div>\n                    <div className=\"mission-banner-content\">\n                        <h2 className=\"mission-title\">MISSION 1: THE FORGOTTEN FLAME</h2>\n                        <div className=\"mission-level\">\n                            <div className=\"level-indicator\">\n                                <span className=\"level-star\">★</span>\n                                <span className=\"level-star\">★</span>\n                                <span className=\"level-star\">★</span>\n                            </div>\n                            <div className=\"elemental-essence\">Elemental Essence: Fire Essence</div>\n                        </div>\n                        <p className=\"mission-description\">\n                            A tomb of a forgotten guardian has been discovered within a temple carved deep into an ash-covered mountain.\n                            Legends say this is the first place where the Fire Essence was sealed.\n                            After the recent volcanic eruption, the inner chamber of the tomb may have been exposed.\n                        </p>\n                        <p className=\"mission-objective\">\n                            <strong>Objective:</strong> Find the Fire Essence hidden within the tomb, buried among the burning stones.\n                        </p>\n                        <div className=\"mission-reward\">\n                            <span className=\"reward-icon fire-crystal\"></span> Reward Pool: $GG\n                        </div>\n                        <div className=\"mission-rewards\">\n                            <div className=\"reward-item\">\n                                <div className=\"reward-icon fire\"></div>\n                                <span className=\"reward-label\">FIRE CRYSTAL</span>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"auto-feed-container\">\n                <div className=\"auto-feed-content\">\n                    {loading ? (\n                        <div className=\"loading-container\">\n                            <div className=\"loading-spinner\"></div>\n                            <p>Loading your NFTs...</p>\n                        </div>\n                    ) : metadatas.length === 0 ? (\n                        <div className=\"no-nfts-message\">\n                            <p>You don't have any NFTs in your wallet.</p>\n                        </div>\n                    ) : (\n                        <div className=\"nft-grid\">\n\n                            {missionItemInfos && metadatas.map((nft, index) => {\n                                const isAvailableMission = Number(missionItemInfos[index].lastPlayTime) * 1000 + 24 * 3600 * 1000 - Date.now() <= 0;\n                                const isAvailableClaim = Number(ethers.formatEther(missionItemInfos[index].claimableAmount)) > 0;\n                                const xp = Number(missionItemInfos[index].xp);\n                                const level = level_types.find(item => xp >= item.start && xp <= item.end).level;\n                                const missionCooldown = Number(missionItemInfos[index].lastPlayTime) * 1000 + 24 * 3600 * 1000 - Date.now();\n\n                                return (\n                                    <div\n                                        key={nft.tokenid}\n                                        className={`nft-mission-card ${index % 3 === 0 ? 'fire-type' : index % 3 === 1 ? 'water-type' : 'earth-type'}`}\n                                    >\n                                        <div className=\"nft-info-section\">\n                                            <div className=\"nft-image-container\">\n                                                <img src={nft.image} alt={nft.name} className=\"nft-image\" />\n                                                <div className=\"nft-level-badge\">LVL {level}</div>\n                                            </div>\n                                            <div className=\"nft-details\">\n                                                <div className=\"nft-id\">#{nft.tokenid}</div>\n                                                <div className=\"nft-name\">{nft.name}</div>\n                                                {missionCooldown > 0 && (\n                                                    <div className=\"mission-status\">\n                                                        <div className=\"status-icon\">⏰</div>\n                                                        <div className=\"status-text\">\n                                                            <span className=\"status-label\">On Mission</span>\n                                                            <span className=\"status-time\">{formatNextFeedTime(missionCooldown)}</span>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {isAvailableClaim && (\n                                                    <div className=\"reward-ready\">\n                                                        <div className=\"reward-icon\">🎁</div>\n                                                        <span className=\"reward-text\">Treasure Ready!</span>\n                                                    </div>\n                                                )}\n                                            </div>\n                                        </div>\n\n                                        <div className=\"nft-actions-section\">\n                                            <div className=\"action-group\">\n                                                <div className=\"action-info\">\n                                                    <span className=\"action-label\">Feed Guardian</span>\n                                                    <span className=\"action-cost\">{Number(ethers.formatEther(feedingPrice))} $GG</span>\n                                                </div>\n                                                <button\n                                                    className={`action-button feed-button ${btnStatus[index].isFeeding || btnStatus[index].isApprovingFeeding ? 'loading' : ''}`}\n                                                    onClick={() => {\n                                                        if (!btnStatus[index].isFeeding) {\n                                                            handleFeed(nft, index);\n                                                        }\n                                                    }}\n                                                    disabled={btnStatus[index].isFeeding || btnStatus[index].isApprovingFeeding}\n                                                >\n                                                    <div className=\"button-content\">\n\n                                                        <span className=\"button-text\">\n                                                            {needApproveGG ?\n                                                                (btnStatus[index].isApprovingFeeding ? 'Approving...' : 'Approve GG') :\n                                                                (btnStatus[index].isFeeding ? 'Feeding...' : 'Feed')\n                                                            }\n                                                        </span>\n                                                    </div>\n                                                </button>\n                                            </div>\n\n                                            <div className=\"action-group\">\n                                                <div className=\"action-info\">\n                                                    <span className=\"action-label\">Mission</span>\n                                                    <span className=\"action-cost\">{Number(ethers.formatEther(missionPrice))} $GG</span>\n                                                </div>\n                                                {\n                                                    isAvailableMission &&\n                                                    (\n                                                        !isApprovedForAll ?\n                                                            <button\n                                                                className={`action-button mission-button ${btnStatus[index].isApprovingNFT ? 'loading' : ''}`}\n                                                                onClick={() => {\n                                                                    if (!btnStatus[index].isApprovingNFT) {\n                                                                        handleApproveForAll(nft, index);\n                                                                    }\n                                                                }}\n                                                                disabled={btnStatus[index].isApprovingNFT}\n                                                            >\n                                                                <div className=\"button-content\">\n                                                                    <span className=\"button-icon\">⚔️</span>\n                                                                    <span className=\"button-text\">\n                                                                        {\n                                                                            btnStatus[index].isApprovingNFT ? 'Approving...' : 'Approve NFT'\n                                                                        }\n                                                                    </span>\n                                                                </div>\n                                                            </button>\n                                                            :\n                                                            (\n                                                                nftsOnWallet[index].is_staked ?\n                                                                    <button\n                                                                        className={`action-button mission-button ${btnStatus[index].isReturningToWallet ? 'loading' : ''}`}\n                                                                        onClick={() => {\n                                                                            if (!btnStatus[index].isReturningToWallet) {\n                                                                                handleReturnWallet(nft, index);\n                                                                            }\n                                                                        }}\n                                                                        disabled={btnStatus[index].isReturningToWallet}\n                                                                    >\n                                                                        <div className=\"button-content\">\n                                                                            <span className=\"button-icon\">↩</span>\n                                                                            <span className=\"button-text\">\n                                                                                {\n                                                                                    btnStatus[index].isReturningToWallet ? 'Returning...' : 'Return To Wallet'\n                                                                                }\n                                                                            </span>\n                                                                        </div>\n                                                                    </button>\n                                                                    :\n                                                                    <button\n                                                                        className={`action-button mission-button ${btnStatus[index].isSendingToMission ? 'loading' : ''}`}\n                                                                        onClick={() => {\n                                                                            if (!btnStatus[index].isSendingToMission) {\n                                                                                handleSendMission(nft, index);\n                                                                            }\n                                                                        }}\n                                                                        disabled={btnStatus[index].isSendingToMission}\n                                                                    >\n                                                                        <div className=\"button-content\">\n                                                                            <span className=\"button-icon\">↪</span>\n                                                                            <span className=\"button-text\">\n                                                                                {\n                                                                                    btnStatus[index].isSendingToMission ? 'Sending...' : 'Send To Mission'\n                                                                                }\n                                                                            </span>\n                                                                        </div>\n                                                                    </button>\n                                                            )\n                                                    )\n                                                }\n\n                                                {!isAvailableMission ? (\n                                                    <div className=\"mission-cooldown\">\n                                                        <div className=\"cooldown-content\">\n                                                            <span className=\"cooldown-icon\">⏱️</span>\n                                                            <span className=\"cooldown-text\">On Mission</span>\n                                                            <span className=\"cooldown-time\">{formatNextFeedTime(missionCooldown)}</span>\n                                                        </div>\n                                                    </div>\n                                                ) : (\n                                                    <button\n                                                        className={`action-button mission-button ${btnStatus[index].isBetting || btnStatus[index].isApprovingMission ? 'loading' : ''}}`}\n                                                        onClick={() => {\n                                                            if (!btnStatus[index].isBetting) {\n                                                                handleMission(nft, index);\n                                                            }\n                                                        }}\n                                                        disabled={btnStatus[index].isBetting || btnStatus[index].isApprovingMission || !nftsOnWallet[index].is_staked}\n                                                    >\n                                                        <div className=\"button-content\">\n                                                            <span className=\"button-icon\">⚔️</span>\n                                                            <span className=\"button-text\">\n                                                                {needApproveGG ?\n                                                                    (btnStatus[index].isApprovingMission ? 'Approving...' : 'Approve GG') :\n                                                                    (btnStatus[index].isBetting ? 'Deploying...' : 'Start Mission')\n                                                                }\n                                                            </span>\n                                                        </div>\n                                                    </button>\n                                                )}\n                                            </div>\n\n                                            <div className=\"action-group\">\n                                                {isAvailableClaim ? (\n                                                    <button\n                                                        className={`action-button claim-button treasure-ready ${nft.isClaiming ? 'loading' : ''}`}\n                                                        onClick={() => {\n                                                            if (!nft.isClaiming) {\n                                                                handleClaim(nft, index);\n                                                            }\n                                                        }}\n                                                        disabled={nft.isClaiming}\n                                                    >\n                                                        <div className=\"button-content\">\n                                                            <span className=\"button-icon\">🎁</span>\n                                                            <span className=\"button-text\">\n                                                                {nft.isClaiming ? 'Opening...' : 'Open Treasure!'}\n                                                            </span>\n                                                        </div>\n                                                        <div className=\"treasure-glow\"></div>\n                                                    </button>\n                                                ) : (\n                                                    <div className=\"no-reward\">\n                                                        <span className=\"no-reward-text\">No treasures yet</span>\n                                                    </div>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    )}\n\n                    {/* Feed Animation Overlay */}\n                    {showFeedAnimation && (\n                        <div className=\"feed-animation-overlay\">\n                            <div className=\"feed-animation-container\">\n                                <img\n                                    src=\"/assets/autobBattle/BossIcon.png\"\n                                    alt=\"Feed\"\n                                    className=\"feed-icon\"\n                                />\n                                <img\n                                    src=\"/assets/autobBattle/Fast.png\"\n                                    alt=\"Clock\"\n                                    className=\"fast-icon\"\n                                />\n                                <div className=\"feed-text\">Feeding...</div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {/* Reward Popup */}\n            {showRewardPopup && (\n                <div className=\"gamified-reward-overlay\" onClick={() => setShowRewardPopup(false)}>\n                    {isRewardLoading ? (\n                        <div className=\"gamified-reward-container loading-theme\" onClick={(e) => e.stopPropagation()}>\n                            <div className=\"gamified-loading-container\">\n                                <div className=\"gamified-loading-effect\">\n                                    <div className=\"gamified-loading-spinner\"></div>\n                                    <div className=\"gamified-loading-flames\"></div>\n                                </div>\n                                <div className=\"gamified-loading-text\">EXPLORING THE TEMPLE</div>\n                                <div className=\"gamified-loading-progress\">\n                                    <div className=\"gamified-loading-progress-bar\"></div>\n                                </div>\n                                <div className=\"gamified-loading-subtext\">\n                                    <span className=\"typing-animation\">Your character is navigating through..</span>\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <div className={`gamified-reward-container ${rewardAmount === 0 ? 'lost' : rewardAmount === 50000 ? 'legendary' : rewardAmount === 20000 ? 'epic' : rewardAmount === 10000 ? 'rare' : rewardAmount === 5000 ? 'uncommon' : 'uncommon'}`} onClick={(e) => e.stopPropagation()}>\n                            <img\n                                className=\"gamified-reward-image\"\n                                src={rewardAmount === 0 ? mission0Img :\n                                    rewardAmount === 50000 ? mission50Img :\n                                        rewardAmount === 20000 ? mission20Img :\n                                            rewardAmount === 10000 ? mission10Img :\n                                                rewardAmount === 5000 ? mission5Img :\n                                                    mission5Img}\n                                alt=\"Mission result\"\n                            />\n                            <div className=\"gamified-reward-content\">\n                                <div className=\"gamified-reward-title\">\n                                    {rewardAmount === 0 ? 'MISSION FAILED!' :\n                                        rewardAmount === 50000 ? 'LEGENDARY DISCOVERY!' :\n                                            rewardAmount === 20000 ? 'EPIC TREASURE!' :\n                                                rewardAmount === 10000 ? 'RARE FIND!' :\n                                                    rewardAmount === 5000 ? 'SUCCESSFUL MISSION!' :\n                                                        'SUCCESSFUL MISSION!'}\n                                </div>\n                                <div className=\"gamified-reward-story\">\n                                    {rewardAmount === 0 ?\n                                        \"You didn't notice the trap while opening the tomb, and lava suddenly started flowing into the temple. You barely escaped with your life!\" :\n                                        rewardAmount === 50000 ?\n                                            \"Congratulations! You reached the tomb in the temple. It seems someone was here before but stayed too long. You've brought back the Fire Element essence and a treasure chest!\" :\n                                            rewardAmount === 20000 ?\n                                                \"Congratulations! You reached the tomb in the temple. It seems someone was here before but fled from the lava eruptions. You've brought back the Fire Element essence and two diamonds!\" :\n                                                rewardAmount === 10000 ?\n                                                    \"Congratulations! You reached the tomb in the temple. Someone was here before you but things didn't go well for them. You've brought back the Fire Element essence!\" :\n                                                    rewardAmount === 5000 ?\n                                                        \"Congratulations! You've successfully navigated through part of the temple and found a small treasure. The Fire Element essence awaits deeper within!\" :\n                                                        \"Congratulations! You've successfully completed your mission and earned a reward!\"}\n                                </div>\n                                <div className=\"gamified-reward-amount-container\">\n                                    <div className=\"gamified-reward-amount\">\n                                        {rewardAmount.toFixed(0)}\n                                    </div>\n                                    <div className=\"gamified-reward-currency\">$GG</div>\n                                </div>\n                                <div className=\"gamified-reward-buttons\">\n                                    {rewardAmount > 0 && (\n                                        <button className=\"gamified-reward-button claim\" onClick={async () => {\n                                            // Find the NFT that matches lastMissionNftId\n                                            const matchingNft = metadatas.find(nft => Number(nft.tokenid) === Number(lastMissionNftId));\n\n                                            if (matchingNft) {\n                                                // Execute actual blockchain claim\n                                                setIsClaiming(true);\n                                                try {\n                                                    await writeContractAsync({\n                                                        address: chainId === TEST_NET ? MISSION_ADDRESS_TEST : MISSION_ADDRESS_MAIN,\n                                                        abi: MissionAbi,\n                                                        functionName: \"claimReward\",\n                                                        args: [matchingNft.tokenid],\n                                                    }).then(() => {\n                                                        setIsClaiming(false);\n                                                    }).finally(() => {\n                                                        setIsClaiming(false);\n                                                    }).catch((err) => {\n                                                        setIsClaiming(false);\n                                                        console.error(\"Mission error:\", err);\n                                                    });\n                                                    toast.success(`Successfully claimed ${rewardAmount} $GG!`);\n                                                } catch (err) {\n                                                    console.error(\"Claim error:\", err);\n                                                    toast.error(\"Failed to claim reward\");\n                                                }\n                                                setShowRewardPopup(false);\n                                            }\n                                        }}>\n                                            <span>{isClaiming ? 'Claiming...' : 'Claim Reward'}</span>\n                                        </button>\n                                    )}\n                                    <button className=\"gamified-reward-button dismiss\" onClick={() => setShowRewardPopup(false)}>\n                                        <span>{rewardAmount > 0 ? 'Claim Later' : 'Return to Base'}</span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            )}\n        </Layout>\n    );\n}"],"names":["UINT256_MAX","level_types","level","require","start","end","ary","Array","from","length","_","i","isApprovingFeeding","isApprovingNFT","isApprovingMission","isBetting","isFeeding","isSendingToMission","isReturningToWallet","useRefresh","fast","slow","useContext","RefreshContext","fastRefresh","slowRefresh","MintPage","chainId","useChainId","address","useAccount","writeContractAsync","useWriteContract","tokenIds","setTokenIds","useState","data","tokenBalance","refetch","refetchTokenBalance","useReadContract","TEST_NET","GG_ADDRESS_TEST","GG_ADDRESS_MAIN","abi","GGAbi","functionName","args","enabled","approvedAmount","refetchApprovedAmount","MISSION_ADDRESS_TEST","MISSION_ADDRESS_MAIN","isApprovedForAll","refetchIsApprovedForAll","NEW_GOTCHA_ADDRESS_TEST","NEW_GOTCHA_ADDRESS_MAIN","NewGotchaAbi","missionPrice","refetchMissionPrice","MissionAbi","feedingPrice","refetchFeedingPrice","missionItemInfos","refetchMissionItemInfos","nftsForUserData","refetchNFTsForUserData","nftsOnWallet","setNftsOnWallet","metadatas","setMetadatas","loading","setLoading","showFeedAnimation","setShowFeedAnimation","needApproveGG","setNeedApproveGG","showRewardPopup","setShowRewardPopup","rewardAmount","setRewardAmount","isRewardLoading","setIsRewardLoading","isClaiming","setIsClaiming","btnStatus","setBtnStatus","useEffect","sortedData","sort","a","b","Number","token_id","tokenids","map","item","getMetadatas","timer","setTimeout","clearTimeout","ethers","lastMissionNftId","setLastMissionNftId","console","log","async","refetchResult","freshMissionItemInfos","tokenIndex","indexOf","claimableAmount","error","response","axios","get","API_URL_TEST","API_URL_MAIN","params","success","err","formatNextFeedTime","countDown","hours","Math","floor","minutes","_jsxs","Layout","children","className","_jsx","parseInt","src","bannerImg","alt","nft","index","isAvailableMission","lastPlayTime","Date","now","isAvailableClaim","xp","find","missionCooldown","image","name","tokenid","onClick","buttonInner","document","querySelector","classList","add","remove","temp","then","finally","catch","toast","isSubmitted","post","nftId","message","handleFeed","disabled","is_staked","handleReturnWallet","handleSendMission","handleApproveForAll","handleMission","handleClaim","e","stopPropagation","mission0Img","mission50Img","mission20Img","mission10Img","mission5Img","toFixed","matchingNft"],"sourceRoot":""}